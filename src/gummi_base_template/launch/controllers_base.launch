<launch>
  <!-- This file is specific for mayo base. The base is read via environment
  variable. The eval expression is perhaps superfluous (this could have been hard
  coded) but it should make sense to keep it, so that this can be adapted to other bases faster. -->
    <arg name="base" value="$(env ROS_GUMMI_BASE)" />
    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/biceps.yaml')" command="load"/>
    <node name="biceps_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_d
                biceps_controller"
          output="screen"/>


    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/triceps.yaml')" command="load"/>
    <node name="triceps_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_d
                triceps_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/elbow_encoder.yaml')" command="load"/>
    <node name="elbow_encoder_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_ae
                elbow_encoder_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/upperarm_roll.yaml')" command="load"/>
    <node name="upperarm_roll_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_d
                upperarm_roll_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/shoulder_abductor.yaml')" command="load"/>
    <node name="shoulder_abductor_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_d
          	shoulder_abductor_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/shoulder_adductor.yaml')" command="load"/>
    <node name="shoulder_adductor_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_d
                shoulder_adductor_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/horizontal_abductor.yaml')" command="load"/>
    <node name="horizontal_abductor_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_d
                horizontal_abductor_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/horizontal_adductor.yaml')" command="load"/>
    <node name="horizontal_adductor_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_d
                horizontal_adductor_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/shoulder_pitch_encoder.yaml')" command="load"/>
    <node name="shoulder_pitch_encoder_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_ae
                shoulder_pitch_encoder_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/shoulder_flexor.yaml')" command="load"/>
    <node name="shoulder_flexor_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_d
                shoulder_flexor_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/shoulder_extensor.yaml')" command="load"/>
    <node name="shoulder_extensor_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_d
                shoulder_extensor_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/shoulder_roll_encoder.yaml')" command="load"/>
    <node name="shoulder_roll_encoder_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_se
                shoulder_roll_encoder_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/shoulder_yaw_encoder.yaml')" command="load"/>
    <node name="shoulder_yaw_encoder_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_se
                shoulder_yaw_encoder_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/head_yaw.yaml')" command="load"/>
    <node name="head_yaw_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_ae
                head_yaw_controller"
          output="screen"/>

    <rosparam file="$(eval find('gummi_base_' + base) + '/dynamixel/head_pitch.yaml')" command="load"/>
    <node name="head_pitch_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port gummi_ae
                head_pitch_controller"
          output="screen"/>

</launch>
